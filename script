local HitlockCooldown = 0.15 --- cambiar a 0.1 si es necesario
local HitlockTransparency = 0.1 --- cambiar a 1 si es necesario
local HitlockTransparency2 = 1
local HitlockColor = Color3.fromRGB(255,255,255) --- cambiar color si es necesario
local flySpeed = 65 --- cambiar si es necesario
local maxFlySpeed = 500
local UserInputService = game:GetService("UserInputService")
local Heartbeat = game:GetService("RunService").Heartbeat
local walkSpeed = 13
local plrs = game:GetService'Players'
local Heartbeat = game:GetService("RunService").Heartbeat
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()
local rep = game:GetService'ReplicatedStorage'
local uis = game:GetService'UserInputService'
local ts = game:GetService'TweenService'
local rs = game:GetService'RunService'
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
local plr22 = game.Players.LocalPlayer
local mouse = plr22:GetMouse()


-- Funciones

local function AddCd(tool,Cd)
    local cd = Instance.new('IntValue',tool)
    cd.Name = 'ClientCD'
    game.Debris:AddItem(cd,Cd)
end

local function Notify(title,text,duration)
    game:GetService'StarterGui':SetCore('SendNotification',{
        Title = tostring(title),
        Text = tostring(text),
        Duration = tonumber(duration),
    })
end    


local function isWithinDistance(player, target, maxDistance)
    if player and player.Character and target and target.Character then
        local playerPosition = player.Character:FindFirstChild("HumanoidRootPart").Position
        local targetPosition = target.Character:FindFirstChild("HumanoidRootPart").Position
        local distance = (playerPosition - targetPosition).Magnitude
        return distance <= maxDistance
    end
    return false
end

local function Shoot(firstPos,nextPos,Revolver)
    if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
        if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
            local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
            SoundClone.Name = 'Uncopy'
            SoundClone.Parent = Revolver.Barrel.Attachment
            SoundClone:Play()
            game.Debris:AddItem(SoundClone, 1)
        end
        local FilterTable = {}
        table.insert(FilterTable, plr.Character)
        table.insert(FilterTable, game.Workspace['Target Filter'])
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.ClassName == 'Accessory' then
                table.insert(FilterTable, v)
            end
        end
        local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 100), FilterTable)
        local BulletCl = rep['Revolver Bullet']:Clone()
        game.Debris:AddItem(BulletCl, 1)
        BulletCl.Parent = game.Workspace['Target Filter']
        local mg = (firstPos - a_2).Magnitude
        BulletCl.Size = Vector3.new(0.2, 0.2, mg)
        BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
        ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
            Size = Vector3.new(0.06, 0.06, mg), 
            Transparency = 1
        }):Play()
        if a_1 then
            local expPart = Instance.new'Part'
            game.Debris:AddItem(expPart, 2)
            expPart.Name = 'Exploding Neon Part'
            expPart.Anchored = true
            expPart.CanCollide = true
            expPart.Shape = 'Ball'
            expPart.Material = Enum.Material.Neon
            expPart.BrickColor = BulletCl.BrickColor
            expPart.Size = Vector3.new(0.1, 0.1, 0.1)
            expPart.Parent = game.Workspace['Target Filter']
            expPart.Position = a_2
            ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(2, 2, 2), 
                Transparency = 1
            }):Play()
            if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
                Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
            end
        end
    end
end

local function Shoot2(firstPos,nextPos,Revolver)
    if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
        if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
            local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
            SoundClone.Name = 'Uncopy'
            SoundClone.Parent = Revolver.Barrel.Attachment
            SoundClone:Play()
            game.Debris:AddItem(SoundClone, 1)
        end
        local FilterTable = {}
        table.insert(FilterTable, plr.Character)
        table.insert(FilterTable, game.Workspace['Target Filter'])
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.ClassName == 'Accessory' then
                table.insert(FilterTable, v)
            end
        end
        local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 999999999999999), FilterTable)
        local BulletCl = rep['Revolver Bullet']:Clone()
        game.Debris:AddItem(BulletCl, 1)
        BulletCl.Parent = game.Workspace['Target Filter']
        local mg = (firstPos - a_2).Magnitude
        BulletCl.Size = Vector3.new(0.2, 0.2, mg)
        BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
        ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
            Size = Vector3.new(0.06, 0.06, mg), 
            Transparency = 1
        }):Play()
        if a_1 then
            local expPart = Instance.new'Part'
            game.Debris:AddItem(expPart, 2)
            expPart.Name = 'Exploding Neon Part'
            expPart.Anchored = true
            expPart.CanCollide = true
            expPart.Shape = 'Ball'
            expPart.Material = Enum.Material.Neon
            expPart.BrickColor = BulletCl.BrickColor
            expPart.Size = Vector3.new(0.1, 0.1, 0.1)
            expPart.Parent = game.Workspace['Target Filter']
            expPart.Position = a_2
            ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(2, 2, 2), 
                Transparency = 1
            }):Play()
            if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
                Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
            end
        end
    end
end

local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/wqsf/lua/refs/heads/main/lib",true))()
local Table = {}
local x = Lib:CreateWindow(" CH40S V4 ")
x:Section("  1v1  ")

getgenv().Notifications = false
getgenv().InfiniteRange = false

x:Button(" Hitlock ", function()
    plr:GetMouse().KeyDown:Connect(function(key)
        if key == 'r' then
            tar = nil
            for _, v in next, workspace:GetDescendants() do
                if v.Name == 'SelectedPlayer' then
                    v:Destroy()
                end
            end
    
            local n_plr, dist
            for _, v in pairs(game.Players:GetPlayers()) do
                if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                    local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                    if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health > 0 and v.Character:FindFirstChild'HumanoidRootPart' then
                        dist = distance
                        n_plr = v
                    end
                end
            end
    
            if n_plr and n_plr.Character then
                local sp = Instance.new('SelectionBox', n_plr.Character.Torso)
                sp.Name = 'SelectedPlayer'
                sp.Adornee = n_plr.Character.HumanoidRootPart
                sp.Color3 = HitlockColor
                sp.Transparency = HitlockTransparency
                tar = n_plr
                if getgenv().Notifications then
                    Notify("CH40S","Jugador lockeado: "..tar.Name ,1)
                elseif not getgenv().Notifications then
                    return 
                end
            end
        elseif key == 'q' and tar and plr.Character then
            for _, v in next, plr22.Character:GetDescendants() do
                if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                    AddCd(v, v.Cooldown.Value)
    
                    if v:FindFirstChild'Attack' and plr22.Character:FindFirstChildOfClass'Humanoid' then
                        plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                    end
    
                    if v:FindFirstChild('Blade') then
                        local swingSound = v.Blade:FindFirstChild('SwingSound')
                        local hitSound = v.Blade:FindFirstChild('HitSound')
    
                        if swingSound and swingSound:IsA('Sound') then
                            swingSound:Play()
                        end
    
                        local humanoidTarget = tar.Character:FindFirstChildOfClass('Humanoid')
                        if humanoidTarget then
                            wait(HitlockCooldown)
    
                            v.DamageRemote:FireServer(humanoidTarget)
    
                            if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 15) then
                                hitSound:Play()
                            end
                        end
                    end
                elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'Head' then
                    v.Parent = plr22.Character
                    AddCd(v, 1.0)
                    rs.Stepped:Wait()
                    plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Fire):Play()
    
                    if getgenv().InfiniteRange then
                        Shoot2(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                        v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position)
                    elseif not getgenv().InfiniteRange then
                        Shoot(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                        v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position)
                    end

                    local hitSound = v:FindFirstChild('HitSound')
                    if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 20) then
                        hitSound:Play()
                    end
                end
            end
        end
    end)
end)

x:Button(" Hitlock Disimulable ", function()
    plr:GetMouse().KeyDown:Connect(function(key)
        if key == 'r' then
            tar = nil
            for _,v in next,workspace:GetDescendants() do
                if v.Name == 'SelectedPlayer' then
                    v:Destroy()
                end
            end
            local n_plr, dist
            for _, v in pairs(game.Players:GetPlayers()) do
                if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                    local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                    if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health>0 and v.Character:FindFirstChild'HumanoidRootPart' then
                        dist = distance
                        n_plr = v
                    end
                end
            end
            local sp = Instance.new('SelectionBox',n_plr.Character.Torso)
            sp.Name = 'SelectedPlayer'
            sp.Adornee = n_plr.Character.HumanoidRootPart
            sp.Color3 = HitlockColor
            sp.Transparency = HitlockTransparency2
            tar = n_plr
        elseif key == 'q' and tar and plr.Character then
            for _,v in next, plr22.Character:GetDescendants() do
                if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                    AddCd(v, v.Cooldown.Value)
    
                    if v:FindFirstChild'Attack' and plr22.Character:FindFirstChildOfClass'Humanoid' then
                        plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                    end
    
                    if v:FindFirstChild('Blade') then
                        local swingSound = v.Blade:FindFirstChild('SwingSound')
                        local hitSound = v.Blade:FindFirstChild('HitSound')

                        if swingSound and swingSound:IsA('Sound') then
                            swingSound:Play()
                        end
    
                        local humanoidTarget = tar.Character:FindFirstChildOfClass('Humanoid')
                        if humanoidTarget then
                            wait(HitlockCooldown)
    
                            v.DamageRemote:FireServer(humanoidTarget)
    
                            if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 15) then
                                hitSound:Play()
                            end
                        end
                    end
                elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'Head' then
                    v.Parent = plr22.Character
                    AddCd(v,1.0)
                    rs.Stepped:Wait()
                    plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Fire):Play()
    
                    Shoot(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                    v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position)
    
                    local hitSound = v:FindFirstChild('HitSound')
                    if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 20) then
                        hitSound:Play()
                    end
                end
            end
        end
    end)
end)

x:Button("Delete Block", function()
	for _, v in next, workspace:GetDescendants() do
        if v.Name == 'SelectedPlayer' then
            v:Destroy()
        end
    end
end)

x:Toggle("Notify Target:",{location = Table, flag = "ToggleNotis"},function()
    getgenv().Notifications = (Table["ToggleNotis"])
end)

x:Toggle("Infinite Range",{location = Table, flag = "ToggleRange"},function()
    getgenv().InfiniteRange = (Table["ToggleRange"])
end)

x:Section("  Misc  ")

x:Button("Cott.lol", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ZlvXs/Cott.lol/refs/heads/main/qz.lua"))()
end)


x:Button("Infinite Yield", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)


x:Button("Chat Spy", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/1pCyfc45"))()
end)

x:Button("VC Unban", function()
    game:GetService("VoiceChatService"):joinVoice()
end)

x:Dropdown("Auto Select",{location = Table,flag = "weapon",search = false, list = {"Mace","Chainsaw","Emerald Greatsword","Blood Dagger","Frost Spear"}, PlayerList = false },function()
    game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadSeven then
        local Player = game:GetService("Players").LocalPlayer
        game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Enabled = false
        Player.PlayerGui["Menu Screen"].RemoteEvent:FireServer(Table["weapon"])
        wait(1)
    end
    end)
end)

x:Section("  World  ")

x:Button("Night", function()
    game:GetService("Lighting").ClockTime = 19
end)

x:Button("Day", function()
    game:GetService("Lighting").ClockTime = 14
end)

x:Section("  hvh  ")

x:Button("Void Player", function()
    local character = game.Players.LocalPlayer.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        rootPart.CFrame = CFrame.new(10394, -113, -10404)
        wait(0.1)
        rootPart.CFrame = CFrame.new(10396.37, -426.99, -10406.17)
        if humanoid then
            humanoid.Sit = true
            task.wait(0.1)
            if rootPart then
                rootPart.CFrame = rootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
            end
            
            for _, animation in ipairs(humanoid:GetPlayingAnimationTracks()) do
                animation:Stop()
            end
        end
        
        local player = game.Players.LocalPlayer
        local humanoid = game.Workspace[player.Name]:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.Health = 0
        end
    else
        warn("HumanoidRootPart no encontrado.")
    end
end)

x:Button("Anti Void", function(parameters)
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")

    local loser1 = Players.LocalPlayer

    local function loser2(character)
        local loser3 = character:WaitForChild("Being Carried", 5)
        if loser3 and loser3:IsA("BoolValue") then
            loser3:GetPropertyChangedSignal("Value"):Connect(function()
                if loser3.Value == true then
                    local loser4 = loser1:WaitForChild("Backpack")
                    for _, tool in pairs(loser4:GetChildren()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("DamageRemote") and tool.Name ~= "Kawaii Revolver" then
                            character:WaitForChild("Humanoid"):EquipTool(tool)
                            break
                        end
                    end

                    local loser5 = character:FindFirstChildOfClass("Tool")
                    local loser6 = character:FindFirstChild("Humanoid")
                    if loser5 and loser5:FindFirstChild("DamageRemote") and loser6 then
                        repeat
                            loser5.DamageRemote:FireServer(loser6)
                            wait(0.1)
                        until loser6.Health <= 0 or loser3.Value == false
                    end
                end
            end)
        end
    end

    loser1.CharacterAdded:Connect(function(character)
        loser2(character)
    end)

    if loser1.Character then
        loser2(loser1.Character)
    end
end)

x:Section(" Keybinds ")

x:Bind(" Fake Triple Jump ",{location = Table, flag = "JumpBind", default = Enum.KeyCode.F},function()
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local LocalPlayer = Players.LocalPlayer
    
    local plrs = game:GetService'Players'
    local plr = plrs.LocalPlayer
    local mouse = plr:GetMouse()
    
    local hasDoubleJumped = false
    
    local function performDoubleJump()
        local character = LocalPlayer.Character
        local humanoid = character and character:FindFirstChildOfClass('Humanoid')
        
        if humanoid and not hasDoubleJumped then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            wait(0.1)
    
            for _,v in next,plr.Backpack:GetChildren() do
                if v.Name == 'C4' and v:FindFirstChild'RemoteEvent' then
                    v.Parent = plr.Character
                    wait()
                    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                    wait(0.1)
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    v:Activate()
                end
            end
    
            wait(0.1)
    
            for _,v in next,plr.Backpack:GetChildren() do
                if v.Name == 'Grenade' and v:FindFirstChild'RemoteEvent' then
                    v.Parent = plr.Character
                    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                    wait(0.1)
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)                                
                    v:Activate()
                end
            end

            hasDoubleJumped = true
        end
    end    
    performDoubleJump()
end)

x:Bind(" Fast Reset ",{location = Table, flag = "KeyBind", default = Enum.KeyCode.C},function()
    local player = game.Players.LocalPlayer
    local humanoid = game.Workspace[player.Name].Humanoid
    humanoid.Health = 0
end)

x:Bind(" Fly Keybind ",{location = Table, flag = "FlyBind", default = Enum.KeyCode.X},function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadEight, false, game)
	wait(0.1)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadEight, false, game)
end)

x:Section(" Loop ")

local QPlayers = game:GetService("Players")
local QLocalPlayer = QPlayers.LocalPlayer
local QCharacter = QLocalPlayer.Character or QLocalPlayer.CharacterAdded:Wait()
local QIsCooldown = false
local QTargetUsername = ""
local QTargetPlayer = nil
local QLoopActive = false
local QConnection 

local function QFindPlayer(QUsername)
    for _, QPlayer in pairs(QPlayers:GetPlayers()) do
        if QPlayer.Name:lower() == QUsername:lower() then
            return QPlayer
        end
    end
    return nil
end

local function QStartCooking()
    while QLoopActive do
        wait(1)
        QTargetPlayer = QFindPlayer(QTargetUsername)

        if not QTargetPlayer or not QTargetPlayer.Character or not QTargetPlayer.Character:FindFirstChild("Humanoid") then
            QLoopActive = false

            QConnection = QPlayers.PlayerAdded:Connect(function(QPlayer)
                if QPlayer.Name == QTargetUsername then
                    QLoopActive = true
                    QStartCooking()
                end
            end)
            return
        end

        local QTarget = QTargetPlayer.Character.Humanoid
        local QTool = QLocalPlayer.Backpack:FindFirstChild("Kawaii Revolver")
        local QDamageRemote = QTool and QTool:FindFirstChild("DamageRemote")

        if QTool and QDamageRemote then
            local QShield = QTargetPlayer.Character:FindFirstChild("Shield")
            if QShield then
                
            end

            while QTarget and QTarget.Health > 0 and QLoopActive do
                if not QIsCooldown then
                    QIsCooldown = true
                    QTool.Parent = QCharacter
                    QDamageRemote:FireServer(QTarget)
                    QTool.Parent = QLocalPlayer.Backpack
                    wait(0.8)
                    QIsCooldown = false
                end
                wait()
            end

        else
            QLoopActive = false
        end
    end
end

x:Toggle("Loop:",{location = Table, flag = "Toggle"},function(QValue)
    QLoopActive = QValue
    if QLoopActive and QTargetUsername ~= "" then
        QStartCooking()
    end
end)

x:Dropdown("Target",{location = Table,flag = "TargetedPlayer",search = false , list = {"1","2","3","4","5","6","7","8","9","0"}, PlayerList = true},function()
    QTargetUsername = (Table["TargetedPlayer"]) or ""
end)
function loadfly()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local camera = game.Workspace.CurrentCamera
    local userInputService = game:GetService("UserInputService")
    local runService = game:GetService("RunService")
    local ValueControl = false
    local moveDirection = Vector3.new(0, 0, 0)
    local sliderHeld = false
    local flyVelocity, flyControl
    local isConfirmDelete = false
    
    local function updateFlySpeed(x)
        local relativePos = math.clamp((x - sliderAbsPos) / sliderWidth, 0, 1)
        flySpeed = math.floor(relativePos * maxFlySpeed)
    end

    local function startFly()
        humanoid.PlatformStand = true
        flyVelocity = Instance.new("BodyVelocity")
        flyVelocity.Velocity = Vector3.new(0, 0, 0)
        flyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
        flyVelocity.Parent = rootPart
        flyControl = Instance.new("BodyGyro")
        flyControl.CFrame = rootPart.CFrame
        flyControl.MaxTorque = Vector3.new(100000, 100000, 100000)
        flyControl.P = 10000
        flyControl.Parent = rootPart
    end
    
    local function stopFly()
        if flyVelocity then flyVelocity:Destroy() end
        if flyControl then flyControl:Destroy() end
        humanoid.PlatformStand = false
    end
    
    local function updateFly()
            moveDirection = Vector3.new(0, 0, 0)
            if userInputService:IsKeyDown(Enum.KeyCode.W) then
                moveDirection = moveDirection + camera.CFrame.LookVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.S) then
                moveDirection = moveDirection - camera.CFrame.LookVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.A) then
                moveDirection = moveDirection - camera.CFrame.RightVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.D) then
                moveDirection = moveDirection + camera.CFrame.RightVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.Space) then
                moveDirection = moveDirection + Vector3.new(0, 1, 0)
            end
    
            if moveDirection.Magnitude > 0 then
                flyVelocity.Velocity = moveDirection.Unit * flySpeed
            else
                flyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
    
            flyControl.CFrame = CFrame.new(rootPart.Position, rootPart.Position + camera.CFrame.LookVector)
    end
    
    runService.RenderStepped:Connect(function()
        if ValueControl then
            updateFly()
        end
    end)
    
    userInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.KeypadEight then
            if not isConfirmDelete then
                ValueControl = not ValueControl
                if ValueControl then
                    startFly()
                else
                    stopFly()
                end
            end
        end
    end)

    player.CharacterAdded:Connect(function(char)
        character = char
        humanoid = character:WaitForChild("Humanoid")
        rootPart = character:WaitForChild("HumanoidRootPart")
        ValueControl = false
        if ValueControl then
            startFly()
        end
    end)
end

loadfly()
